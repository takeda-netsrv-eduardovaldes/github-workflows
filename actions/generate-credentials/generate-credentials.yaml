name: GitHub Actions - Generate Credentials
on:

####----------------------------------------------------------------------------
  workflow_dispatch:
    name: Manual Deployment
    description: 'Triggering Manual Deployment'
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Generate Credentials'
####----------------------------------------------------------------------------
  push:
    branches: [ master ]
    paths:
      - action.yaml
####----------------------------------------------------------------------------
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_DEFAULT_ACCOUNT: ${{ secrets.AWS_DEFAULT_ACCOUNT }}
  AWS_DEFAULT_PROFILE: ${{ secrets.AWS_DEFAULT_PROFILE }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ## DEPLOY_TERRAFORM
  ## DESTROY_TERRAFORM
  ## DEVOPS_ASSUMEROLE_POLICY
  ## DEVOPS_BOUNDARIES_POLICY
  ## DEVOPS_ACCESS_POLICY
  DEVOPS_ACCESS_ROLE: ${{ secrets.DEVOPS_ACCESS_ROLE }}
  DEVOPS_ACCOUNT_NAME: ${{ secrets.DEVOPS_ACCOUNT_NAME }}
  ## INSPECT_DEPLOYMENT
  ## PRIVATE_KEYPAIR_FILE
  ## PRIVATE_KEYPAIR_NAME
  ## PRIVATE_KEYPAIR_SECRET
  ## PROVISION_TERRAFORM
  ## TARGET_WORKSPACE
  ## UPDATE_PYTHON_LATEST
  ## UPDATE_SYSTEM_LATEST
  ##
  ## AWS CLI package attributes
  awscli_download: 'awscli.amazonaws.com'
  awscli_package: "awscli-exe-linux-x86_64.zip"
####----------------------------------------------------------------------------
jobs:
  generate-credentials:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
####----------------------------------------------------------------------------
      ## System Requirements
      - name: System Requirements
        uses: emvaldes/system-requirements@master
        id: system-requirements
        with:
          install-awscli-tool: true
          install-default-tools: true
          update-operating-system: false
          update-python-version: true
        continue-on-error: false
####----------------------------------------------------------------------------
      ## Installed Packages
      - name: Installed Packages
        id: installed-packages
        shell: bash
        run: |
          aws --version;
          jq --version;
          tree --version;
####----------------------------------------------------------------------------
      ## Generate Parameters
      - name: Generate Parameters
        id: generate-parameters
        shell: bash
        run: |
          session_timestamp="$(date +"%y%m%d%H%M%S")" ;
          eval "echo '::set-env name=session_timestamp::${session_timestamp}'" ;
        continue-on-error: false
####----------------------------------------------------------------------------
      - name: Requesting Credentials
        uses: ./
        id: request-credentials
        with:
          aws-access-key-id: ${AWS_ACCESS_KEY_ID}
          aws-default-account: ${AWS_DEFAULT_ACCOUNT}
          aws-default-region: ${AWS_DEFAULT_REGION}
          aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
          devops-access-role: ${DEVOPS_ACCESS_ROLE}
          devops-account-name: ${DEVOPS_ACCOUNT_NAME}
          session-timestamp: "DevOpsPipeline--${session_timestamp}"
        continue-on-error: false
####----------------------------------------------------------------------------
      ## Display Environment
      - name: Display Environment
        id: display-environment
        run: |
          echo -e "Displaying Enviroment Settings ..." ;
          echo -e "AWS Access Key-ID: ${AWS_ACCESS_KEY_ID}" ;
          echo -e "AWS Secret Access Key: ${AWS_SECRET_ACCESS_KEY}" ;
          echo -e "AWS Session Token: ${AWS_SESSION_TOKEN}" ;
          echo -e "AWS Token Expires: ${AWS_TOKEN_EXPIRES}" ;
####----------------------------------------------------------------------------
      ## Display IAM List-Users
      - name: Display IAM List-Users
        id: display-listusers
        run: |
          aws --profile ${AWS_DEFAULT_PROFILE} \
          --region ${AWS_DEFAULT_REGION} \
          iam list-users \
          --query 'Users[?UserName==`'${DEVOPS_ACCOUNT_NAME}'`]' ;
        continue-on-error: false
####----------------------------------------------------------------------------
